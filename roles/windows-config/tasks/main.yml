---
- name: Wait for WinRM to be available
  wait_for_connection:
    delay: 60
    timeout: 600

- name: Gather Windows facts
  setup:

- name: Enable WinRM HTTPS listener
  win_shell: |
    # Create self-signed certificate for WinRM HTTPS
    $cert = New-SelfSignedCertificate -DnsName $env:COMPUTERNAME -CertStoreLocation Cert:\LocalMachine\My
    
    # Enable WinRM HTTPS listener
    winrm create winrm/config/Listener?Address=*+Transport=HTTPS "@{Hostname=`"$env:COMPUTERNAME`";CertificateThumbprint=`"$($cert.Thumbprint)`"}"
    
    # Configure WinRM settings
    winrm set winrm/config '@{MaxTimeoutms="1800000"}'
    winrm set winrm/config/service '@{AllowUnencrypted="false"}'
    winrm set winrm/config/service/auth '@{Basic="true"}'
    winrm set winrm/config/service/auth '@{CredSSP="true"}'
    
    # Configure firewall
    netsh advfirewall firewall add rule name="WinRM HTTPS" dir=in action=allow protocol=TCP localport=5986
  register: winrm_config

- name: Display WinRM configuration status
  debug:
    var: winrm_config

- name: Install Chocolatey package manager
  win_shell: |
    Set-ExecutionPolicy Bypass -Scope Process -Force
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
    iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
  args:
    creates: C:\ProgramData\chocolatey\bin\choco.exe

- name: Install essential Windows packages
  win_chocolatey:
    name:
      - googlechrome
      - notepadplusplus
      - 7zip
      - git
      - python3
      - powershell-core
    state: present

- name: Configure Windows Firewall for common services
  win_firewall_rule:
    name: "{{ item.name }}"
    localport: "{{ item.port }}"
    action: allow
    direction: in
    protocol: tcp
    state: present
  loop:
    - { name: "HTTP", port: "80" }
    - { name: "HTTPS", port: "443" }
    - { name: "RDP", port: "3389" }

- name: Set timezone to UTC
  win_timezone:
    timezone: "UTC"

- name: Configure Windows Updates
  win_updates:
    category_names:
      - SecurityUpdates
      - CriticalUpdates
    state: installed
    reboot: yes
    reboot_timeout: 3600
  register: update_result

- name: Create local administrator user
  win_user:
    name: ansible-admin
    password: "{{ vault_windows_ansible_password | default('TempPassword123!') }}"
    groups:
      - Administrators
    password_never_expires: yes
    state: present

- name: Enable Remote Desktop
  win_regedit:
    path: HKLM:\System\CurrentControlSet\Control\Terminal Server
    name: fDenyTSConnections
    data: 0
    type: dword